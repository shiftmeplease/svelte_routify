import{S as s,i as e,s as a,p as n,e as r,b as t,c as o,q as d,j as c,k as i,f as l}from"./main.js";function p(s){let e,a,p;const u=s[4].default,$=n(u,s,s[3],null);return{c(){e=r("h2"),$&&$.c(),t(e,"class",a="badge "+s[0])},m(s,a){o(s,e,a),$&&$.m(e,null),p=!0},p(s,[n]){$&&$.p&&8&n&&d($,u,s,s[3],n,null,null),(!p||1&n&&a!==(a="badge "+s[0]))&&t(e,"class",a)},i(s){p||(c($,s),p=!0)},o(s){i($,s),p=!1},d(s){s&&l(e),$&&$.d(s)}}}function u(s,e,a){let{$$slots:n={},$$scope:r}=e,{type:t="primary"}=e,{rounded:o=!1}=e;["primary","secondary","success","danger","warning","info","light","dark"].indexOf(t)<0&&(console.warn(`Unsupported type of Badge:'${t}', changed to 'primary'`),t="primary");let d=`bg-${t}`;switch(t){case"warning":case"info":case"light":d+=" text-dark"}return o&&(d+=" rounded-pill"),s.$$set=s=>{"type"in s&&a(1,t=s.type),"rounded"in s&&a(2,o=s.rounded),"$$scope"in s&&a(3,r=s.$$scope)},[d,t,o,r,n]}class $ extends s{constructor(s){super(),e(this,s,u,p,a,{type:1,rounded:2})}}export{$ as B};
//# sourceMappingURL=Badge-b2b5d232.js.map
